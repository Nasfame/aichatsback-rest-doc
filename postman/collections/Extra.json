{
	"info": {
		"_postman_id": "0b9bd687-07f8-495e-a61a-dfe4fe0e0f5e",
		"name": "Extra",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "11058592-0b9bd687-07f8-495e-a61a-dfe4fe0e0f5e"
	},
	"item": [
		{
			"name": "I need some help",
			"id": "c1c20a3c-aec3-45ec-b615-69d7a5020488",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sender\": \"user\",\n  \"message\": \"I am learning golang, can u prepare a study plan\",\n  \"chat_id\":\"{{chat_id}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{u}}/chat/v3",
					"host": [
						"{{u}}"
					],
					"path": [
						"chat",
						"v3"
					]
				}
			},
			"response": [
				{
					"id": "a8723ebe-1436-4a54-abae-1f914b5cc580",
					"name": "I need some help v1",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sender\": \"user\",\n  \"message\": \"I am learning golang, can u prepare a study plan\",\n  \"chat_id\":\"{{chat_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{u}}/chat/v1",
							"host": [
								"{{u}}"
							],
							"path": [
								"chat",
								"v1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Tue, 27 Jun 2023 16:49:06 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "189"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"sender\": \"bot\",\n    \"message\": \" Sure, I'd be happy to help you prepare a study plan for learning Golang. What kind of timeline are you looking at?\",\n    \"chat_id\": \"6bf57d6585cb4a3e85078989bf569051\"\n}"
				},
				{
					"id": "24307263-eb58-46cf-9d1a-cae17196b407",
					"name": "v3-beta",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sender\": \"user\",\n  \"message\": \"I am learning golang, can u prepare a study plan\",\n  \"chat_id\":\"{{chat_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{u}}/chat/v3",
							"host": [
								"{{u}}"
							],
							"path": [
								"chat",
								"v3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Thu, 29 Jun 2023 19:54:27 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "241"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"sender\": \"bot\",\n    \"message\": \" I'm sorry, I don't know how to prepare a study plan for learning Golang. However, I can provide you with some resources that might help. Would you like me to do that?\",\n    \"chat_id\": \"dff84aa6948a400986faf2516d0363d0\"\n}"
				}
			]
		},
		{
			"name": "I want to see implementations of concurrency",
			"id": "c563aa9e-51f7-44de-9e4d-abf58677fd32",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sender\": \"user\",\n  \"message\": \"I want to see implementations of concurrency\",\n  \"chat_id\":\"{{chat_id}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{u}}/chat/v3",
					"host": [
						"{{u}}"
					],
					"path": [
						"chat",
						"v3"
					]
				}
			},
			"response": [
				{
					"id": "36e82611-a84f-402f-bf61-a910f5d9e489",
					"name": "I want to see implementations of concurrency v1",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sender\": \"user\",\n  \"message\": \"I want to see implementations of concurrency\",\n  \"chat_id\":\"{{chat_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{u}}/chat/v1",
							"host": [
								"{{u}}"
							],
							"path": [
								"chat",
								"v1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Tue, 27 Jun 2023 16:49:21 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "196"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"sender\": \"bot\",\n    \"message\": \" Sure, I can help you find implementations of concurrency in Golang. Do you have any specific resources you'd like to use?\",\n    \"chat_id\": \"6bf57d6585cb4a3e85078989bf569051\"\n}"
				},
				{
					"id": "60026420-d6a3-42d0-9015-74a1d0c2d942",
					"name": "v3-beta",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sender\": \"user\",\n  \"message\": \"I want to see implementations of concurrency\",\n  \"chat_id\":\"{{chat_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{u}}/chat/v3",
							"host": [
								"{{u}}"
							],
							"path": [
								"chat",
								"v3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Thu, 29 Jun 2023 19:54:27 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "557"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"sender\": \"bot\",\n    \"message\": \" Sure, I can provide you with some resources for implementations of concurrency. Here are some links to tutorials and articles that might be helpful: \\n\\n- https://www.golangprograms.com/golang-concurrency-example.html\\n- https://blog.golang.org/go-concurrency-patterns\\n- https://www.callicoder.com/golang-concurrency-tutorial/\\n- https://www.youtube.com/watch?v=f6kdp27TYZs\\n- https://www.youtube.com/watch?v=QDDwwePbDtw\\n\\nI hope these resources help you in your learning journey.\",\n    \"chat_id\": \"dff84aa6948a400986faf2516d0363d0\"\n}"
				}
			]
		},
		{
			"name": "Ask about PDf",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e0502cf4-94e0-4fda-b6fd-b9779dfc66f1",
						"exec": [
							"const body = JSON.parse(pm.request.body.raw);",
							"",
							"body.message=`",
							"package main",
							"import (",
							"\"fmt\"",
							"\"time\"",
							")",
							"var counter = 0",
							"func main() {",
							"for i := 0; i < 20; i++ {",
							"go incr()",
							"}",
							"time.Sleep(time.Millisecond * 10)",
							"}",
							"func incr() {",
							"counter++",
							"fmt.Println(counter)",
							"}",
							"`",
							"",
							"pm.request.body.raw = JSON.stringify(body);"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "af301b56-573c-4f7f-ba97-7083cae14d99",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sender\": \"user\",\n  \"message\": \"overwritten in prerequest script\",\n  \"chat_id\":\"{{chat_id}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{u}}/chat/v3",
					"host": [
						"{{u}}"
					],
					"path": [
						"chat",
						"v3"
					]
				}
			},
			"response": [
				{
					"id": "aba7ed0a-cbbe-4f31-863d-6314b270428f",
					"name": "Generic and related to pdf",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sender\": \"user\",\n  \"message\": \"overwritten in prerequest script\",\n  \"chat_id\":\"{{chat_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{u}}/chat/v2",
							"host": [
								"{{u}}"
							],
							"path": [
								"chat",
								"v2"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Wed, 28 Jun 2023 11:51:32 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "255"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"sender\": \"bot\",\n    \"message\": \"The purpose of the code provided is to demonstrate a simple program in the Go programming language. It is a basic program that prints the message \\\"it's over 9000!\\\" to the console.\",\n    \"chat_id\": \"a455c7bfa34646a5a5baf43516fcdae2\"\n}"
				},
				{
					"id": "ea47639b-e2a2-4c60-84a2-3ba5c73aaa9d",
					"name": "v3-beta",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sender\": \"user\",\n  \"message\": \"overwritten in prerequest script\",\n  \"chat_id\":\"{{chat_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{u}}/chat/v3",
							"host": [
								"{{u}}"
							],
							"path": [
								"chat",
								"v3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "date",
							"value": "Thu, 29 Jun 2023 19:54:27 GMT"
						},
						{
							"key": "server",
							"value": "uvicorn"
						},
						{
							"key": "content-length",
							"value": "179"
						},
						{
							"key": "content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"sender\": \"bot\",\n    \"message\": \" This looks like a Golang program that uses concurrency to increment a counter variable. Is that correct?\",\n    \"chat_id\": \"dff84aa6948a400986faf2516d0363d0\"\n}"
				}
			]
		}
	]
}